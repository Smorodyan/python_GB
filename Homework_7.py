# Homework_7

# Задача 34: 
# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
# разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
# стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
# гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
# слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
# от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
# напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не
# в порядке
# Ввод:                                       Вывод:
# пара-ра-рам рам-пам-папам па-ра-па-дам      Парам пам-пам

'''
phrase = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
vowel = 'а, е, ё, и, о, у, ы, э, ю, я'
phrase = phrase.split()
vowel_count = 0
lst = []

# Находим гласные и считаем их кол-во
for i in phrase:
    for j in i:
        for k in vowel:
            if j == k:
                vowel_count += 1
    lst.append(vowel_count)
    vowel_count = 0
# print(lst)

# В списке lst сравниваем элемнты списка друг с другом
flag = False
for i in range(len(lst)-1):
    if lst[i] == lst[i+1]:
        flag = False
    else:
        flag = True
        print('Пам парам')
        break
if flag == False:
    print('Парам пам-пам')
'''




# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.
# Ввод:                                           Вывод:
# print_operation_table(lambda x, y: x * y)       1 2 3 4 5 6 
#                                                 2 4 6 8 10 12
#                                                 3 6 9 12 15 18
#                                                 4 8 12 16 20 24
#                                                 5 10 15 20 25 30
#                                                 6 12 18 24 30 36 


def print_operation_table(num_rows, num_columns):
    for i in range(1, num_columns + 1):
        print()
        for j in range(1, num_rows+1):
            print(i * j, end=' ')


x = int(input('Input x: '))
y = int(input('Input y: '))

print_operation_table(x, y)